{"ast":null,"code":"import ACTION_TYPES from \"./actionTypes\";\nimport STATUS_TYPE from \"../reducers/statusTypes\";\nimport fetchPopularPage from \"../api/fetch_popular_page\";\n\nconst startFetchPage = pageNum => ({\n  type: ACTION_TYPES.popularPage.cachePageStart,\n  pageNum\n}); //receive popular page error\n\n\nconst failedFetchPage = pageNum => ({\n  type: ACTION_TYPES.popularPage.cachePageFailed,\n  pageNum\n}); //recieve popular page\n\n\nconst cachePage = data => ({\n  type: ACTION_TYPES.popularPage.cachePageSuccess,\n  data\n});\n\nconst fetchNewPopularPage = pageNum => (dispatch, getState) => {\n  const page = getState().popularPage.cachedPages[pageNum];\n\n  if (page && page.status === STATUS_TYPE.start) {\n    return;\n  }\n\n  if (page && page.status === STATUS_TYPE.success) {\n    return;\n  }\n\n  dispatch(startFetchPage(pageNum));\n  fetchPopularPage(pageNum).then(response => dispatch(cachePage(response.data))) // fetch sucess, cache data\n  .catch(error => {\n    console.log(error);\n    dispatch(failedFetchPage(pageNum)); // fetch failed\n  });\n};\n\nexport default fetchNewPopularPage;","map":{"version":3,"names":["ACTION_TYPES","STATUS_TYPE","fetchPopularPage","startFetchPage","pageNum","type","popularPage","cachePageStart","failedFetchPage","cachePageFailed","cachePage","data","cachePageSuccess","fetchNewPopularPage","dispatch","getState","page","cachedPages","status","start","success","then","response","catch","error","console","log"],"sources":["/Users/qiluan/Desktop/scripts/training/last_project/movie_list_app/movie_list/src/actionCreators/popular_pages_action_creator.js"],"sourcesContent":["import ACTION_TYPES from \"./actionTypes\";\r\nimport STATUS_TYPE from \"../reducers/statusTypes\";\r\nimport fetchPopularPage  from \"../api/fetch_popular_page\";\r\n\r\nconst startFetchPage = (pageNum) => ({\r\n    type: ACTION_TYPES.popularPage.cachePageStart,\r\n    pageNum\r\n});\r\n\r\n//receive popular page error\r\nconst failedFetchPage = (pageNum) => ({\r\n    type:ACTION_TYPES.popularPage.cachePageFailed,\r\n    pageNum\r\n});\r\n\r\n//recieve popular page\r\nconst cachePage = data => ({\r\n    type: ACTION_TYPES.popularPage.cachePageSuccess,\r\n    data\r\n});\r\n\r\nconst fetchNewPopularPage = (pageNum) => (dispatch, getState) => {\r\n    const page = getState().popularPage.cachedPages[pageNum];\r\n    if (page && page.status === STATUS_TYPE.start) {\r\n        return;\r\n    }\r\n    \r\n    if (page && page.status === STATUS_TYPE.success) {\r\n      return;\r\n    }\r\n\r\n    dispatch(startFetchPage(pageNum))\r\n    fetchPopularPage(pageNum)\r\n    .then(response => dispatch(cachePage(response.data))) // fetch sucess, cache data\r\n    .catch(error => {\r\n      console.log(error);\r\n      dispatch(failedFetchPage(pageNum)); // fetch failed\r\n    })\r\n}\r\n\r\nexport default fetchNewPopularPage;\r\n\r\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,gBAAP,MAA8B,2BAA9B;;AAEA,MAAMC,cAAc,GAAIC,OAAD,KAAc;EACjCC,IAAI,EAAEL,YAAY,CAACM,WAAb,CAAyBC,cADE;EAEjCH;AAFiC,CAAd,CAAvB,C,CAKA;;;AACA,MAAMI,eAAe,GAAIJ,OAAD,KAAc;EAClCC,IAAI,EAACL,YAAY,CAACM,WAAb,CAAyBG,eADI;EAElCL;AAFkC,CAAd,CAAxB,C,CAKA;;;AACA,MAAMM,SAAS,GAAGC,IAAI,KAAK;EACvBN,IAAI,EAAEL,YAAY,CAACM,WAAb,CAAyBM,gBADR;EAEvBD;AAFuB,CAAL,CAAtB;;AAKA,MAAME,mBAAmB,GAAIT,OAAD,IAAa,CAACU,QAAD,EAAWC,QAAX,KAAwB;EAC7D,MAAMC,IAAI,GAAGD,QAAQ,GAAGT,WAAX,CAAuBW,WAAvB,CAAmCb,OAAnC,CAAb;;EACA,IAAIY,IAAI,IAAIA,IAAI,CAACE,MAAL,KAAgBjB,WAAW,CAACkB,KAAxC,EAA+C;IAC3C;EACH;;EAED,IAAIH,IAAI,IAAIA,IAAI,CAACE,MAAL,KAAgBjB,WAAW,CAACmB,OAAxC,EAAiD;IAC/C;EACD;;EAEDN,QAAQ,CAACX,cAAc,CAACC,OAAD,CAAf,CAAR;EACAF,gBAAgB,CAACE,OAAD,CAAhB,CACCiB,IADD,CACMC,QAAQ,IAAIR,QAAQ,CAACJ,SAAS,CAACY,QAAQ,CAACX,IAAV,CAAV,CAD1B,EACsD;EADtD,CAECY,KAFD,CAEOC,KAAK,IAAI;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACAV,QAAQ,CAACN,eAAe,CAACJ,OAAD,CAAhB,CAAR,CAFc,CAEsB;EACrC,CALD;AAMH,CAjBD;;AAmBA,eAAeS,mBAAf"},"metadata":{},"sourceType":"module"}