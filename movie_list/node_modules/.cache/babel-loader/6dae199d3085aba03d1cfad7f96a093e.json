{"ast":null,"code":"import { SORT_TYPE, SORT_BUTTON_TYPE } from './constants';\n\nfunction getSortFunction(type) {\n  switch (type) {\n    case SORT_TYPE.titleAscend:\n      return (a, b) => a.title.localeCompare(b.title);\n\n    case SORT_TYPE.titleDecend:\n      return (a, b) => b.title.localeCompare(a.title);\n\n    case SORT_TYPE.voteAverageAscend:\n      return (a, b) => parseFloat(a.vote_average) - parseFloat(b.vote_average);\n\n    case SORT_TYPE.voteAverageDescend:\n      return (a, b) => parseFloat(b.vote_average) - parseFloat(a.vote_average);\n\n    case SORT_TYPE.voteCountAscend:\n      return (a, b) => parseInt(a.vote_count) - parseInt(b.vote_count);\n\n    case SORT_TYPE.voteCountDescend:\n      return (a, b) => parseFloat(b.vote_count) - parseFloat(a.vote_count);\n\n    case SORT_TYPE.releaseDateAscend:\n      return (a, b) => compareDate(a, b);\n\n    case SORT_TYPE.releaseDateDescend:\n      return (a, b) => compareDate(b, a);\n\n    default:\n      return () => 0;\n  }\n}\n\nfunction mapOptionToType(option) {\n  switch (option.type) {\n    case SORT_BUTTON_TYPE.title:\n      return option.isAscending ? SORT_TYPE.titleAscend : SORT_TYPE.titleDecend;\n\n    case SORT_BUTTON_TYPE.release_date:\n      return option.isAscending ? SORT_TYPE.releaseDateAscend : SORT_TYPE.releaseDateDescend;\n\n    case SORT_BUTTON_TYPE.vote_count:\n      return option.isAscending ? SORT_TYPE.voteCountAscend : SORT_TYPE.voteCountDescend;\n\n    case SORT_BUTTON_TYPE.average_score:\n      return option.isAscending ? SORT_TYPE.voteAverageAscend : SORT_TYPE.voteAverageDescend;\n\n    default:\n      return '';\n  }\n}\n\nfunction getParsedDate(date) {\n  try {\n    let i = date.indexOf('-');\n    let j = date.indexOf('-', i + 1);\n    let year = parseInt(date.substring(0, i));\n    let month = parseInt(date.substring(i + 1, j));\n    let day = parseInt(date.substring(j + 1));\n    if (j <= i || isNaN(year) || isNaN(month) || isNaN(day)) throw Error('could not recognize date format');\n    return {\n      year,\n      month,\n      day\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      year: 1,\n      month: 1,\n      day: 1\n    };\n  }\n}\n\nfunction compareDate(a, b) {\n  const dateA = getParsedDate(a.release_date);\n  const dateB = getParsedDate(b.release_date);\n  return dateA.year === dateB.year ? dateA.month === dateB.month ? dateA.day - dateB.day : dateA.month - dateB.month : dateA.year - dateB.year;\n}\n\nexport { getSortFunction };\nexport default function getSortFunctionFromOption(option) {\n  return getSortFunction(mapOptionToType(option));\n}\n;","map":{"version":3,"names":["SORT_TYPE","SORT_BUTTON_TYPE","getSortFunction","type","titleAscend","a","b","title","localeCompare","titleDecend","voteAverageAscend","parseFloat","vote_average","voteAverageDescend","voteCountAscend","parseInt","vote_count","voteCountDescend","releaseDateAscend","compareDate","releaseDateDescend","mapOptionToType","option","isAscending","release_date","average_score","getParsedDate","date","i","indexOf","j","year","substring","month","day","isNaN","Error","err","console","log","dateA","dateB","getSortFunctionFromOption"],"sources":["/Users/qiluan/Desktop/scripts/training/last_project/movie_list_app/movie_list/src/components/utils/sort.js"],"sourcesContent":["import { SORT_TYPE, SORT_BUTTON_TYPE } from './constants'\n\nfunction getSortFunction(type) {\n  switch (type) {\n    case (SORT_TYPE.titleAscend): \n      return (a, b) => a.title.localeCompare(b.title);\n    case (SORT_TYPE.titleDecend): \n      return (a, b) => b.title.localeCompare(a.title);\n    case (SORT_TYPE.voteAverageAscend):\n      return (a, b) => parseFloat(a.vote_average) - parseFloat(b.vote_average);\n    case (SORT_TYPE.voteAverageDescend):\n      return (a, b) => parseFloat(b.vote_average) - parseFloat(a.vote_average);\n    case (SORT_TYPE.voteCountAscend):\n      return (a, b) => parseInt(a.vote_count) - parseInt(b.vote_count);\n    case (SORT_TYPE.voteCountDescend):\n      return (a, b) => parseFloat(b.vote_count) - parseFloat(a.vote_count);\n    case (SORT_TYPE.releaseDateAscend):\n      return (a, b) => compareDate(a, b);\n    case (SORT_TYPE.releaseDateDescend):\n      return (a, b) => compareDate(b, a);\n    default:\n      return () => 0;\n  }\n}\n\nfunction mapOptionToType (option) {\n  switch (option.type) {\n    case (SORT_BUTTON_TYPE.title):\n      return option.isAscending? SORT_TYPE.titleAscend: SORT_TYPE.titleDecend;\n    case (SORT_BUTTON_TYPE.release_date):\n      return option.isAscending? SORT_TYPE.releaseDateAscend: SORT_TYPE.releaseDateDescend;\n    case (SORT_BUTTON_TYPE.vote_count):\n      return option.isAscending? SORT_TYPE.voteCountAscend: SORT_TYPE.voteCountDescend;\n    case (SORT_BUTTON_TYPE.average_score):\n      return option.isAscending? SORT_TYPE.voteAverageAscend: SORT_TYPE.voteAverageDescend;\n    default:\n      return '';\n  }\n}\n\nfunction getParsedDate(date) {\n  try {\n    let i = date.indexOf('-');\n    let j = date.indexOf('-', i+1);\n    let year = parseInt(date.substring(0, i));\n    let month = parseInt(date.substring(i+1, j));\n    let day = parseInt(date.substring(j+1));\n    if (j <= i || isNaN(year) || isNaN(month) || isNaN(day)) throw Error('could not recognize date format');\n    return {year, month, day};\n  } catch (err) {\n    console.log(err);\n    return {year: 1, month: 1, day: 1};\n  }\n}\n\nfunction compareDate(a, b) {\n  const dateA = getParsedDate(a.release_date);\n  const dateB = getParsedDate(b.release_date);\n  return (\n    dateA.year === dateB.year\n    ?dateA.month === dateB.month\n      ?dateA.day - dateB.day\n      :dateA.month - dateB.month\n    :dateA.year - dateB.year\n  );\n}\n\nexport { getSortFunction };\nexport default function getSortFunctionFromOption(option) {\n  return getSortFunction(mapOptionToType(option));\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}